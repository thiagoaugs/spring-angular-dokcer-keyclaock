options:
 docker: true
definitions:
 steps:
   - step: &build-dev
       name: Build Dev Docker image
       image: node:12.14.0
       script:
         - npm install && npm run build_dev
         - docker build -t sat-forms-frontend -f docker/Dockerfile .
         - docker save --output tmp-image.docker sat-forms-frontend
       artifacts:
         - tmp-image.docker
   - step: &build-prod
       name: Build Prod Docker image
       image: node:12.14.0
       script:
         - npm install && npm run build
         - docker build -t sat-forms-frontend -f docker/Dockerfile .
         - docker save --output tmp-image.docker sat-forms-frontend
       artifacts:
         - tmp-image.docker
   - step: &push-dev
       name: Push Dev Image to GCP Registry
       image: google/cloud-sdk:alpine
       script:
         - docker load --input ./tmp-image.docker
         - echo $GCLOUD_API_KEYFILE | base64 -d > ./gcloud-api-key.json
         - gcloud auth activate-service-account --key-file gcloud-api-key.json
         - gcloud config set project $GCLOUD_PROJECT
         - export IMAGE_NAME=gcr.io/$GCLOUD_PROJECT/sat-forms-frontend:develop
         - docker tag sat-forms-frontend ${IMAGE_NAME}
         - cat ./gcloud-api-key.json | docker login -u _json_key --password-stdin https://gcr.io
         - docker push ${IMAGE_NAME}
   - step: &deploy-dev
       name: Deploy Dev
       deployment: staging
       script:
         - ssh bitbucket@dev.satsolucoes.com.br 'cd /bitbucket/sat-forms/sat-forms-frontend' \
           '&& cat /gckey.json | docker login -u _json_key --password-stdin https://gcr.io' \
           '&& docker-compose -f sat-forms-frontend.yml pull' \
           '&& docker-compose -f sat-forms-frontend.yml up -d && exit'
pipelines:
 tags:
   v*:
     - step: *build-prod
 branches:
   develop:
     - step: *build-dev
     - step: *push-dev
     - step: *deploy-dev
   master:
     - step: *build-prod
